// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShiftScheduler.Data;

#nullable disable

namespace ShiftScheduler.Migrations
{
    [DbContext(typeof(ShiftSchedulerContext))]
    partial class ShiftSchedulerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ShiftScheduler.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AvoidsWeekends")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EmploymentType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("PrefersEvening")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PrefersMorning")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ShiftScheduler.Models.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("ShiftScheduler.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RequiredEmployees")
                        .HasColumnType("int");

                    b.Property<string>("ShiftTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ShiftId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("ShiftScheduler.Models.ShiftAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BackupEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MainEmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentId");

                    b.HasIndex("BackupEmployeeId");

                    b.HasIndex("MainEmployeeId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("ShiftId");

                    b.ToTable("ShiftAssignments");
                });

            modelBuilder.Entity("ShiftScheduler.Models.ShiftRequiredSkill", b =>
                {
                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("ShiftId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("ShiftRequiredSkills");
                });

            modelBuilder.Entity("ShiftScheduler.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ShiftScheduler.Models.WeeklySchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("WeekStartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ScheduleId");

                    b.ToTable("WeeklySchedules");
                });

            modelBuilder.Entity("ShiftScheduler.Models.EmployeeSkill", b =>
                {
                    b.HasOne("ShiftScheduler.Models.Employee", "Employee")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftScheduler.Models.Skill", "Skill")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("ShiftScheduler.Models.ShiftAssignment", b =>
                {
                    b.HasOne("ShiftScheduler.Models.Employee", "BackupEmployee")
                        .WithMany("BackupAssignments")
                        .HasForeignKey("BackupEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftScheduler.Models.Employee", "MainEmployee")
                        .WithMany("MainAssignments")
                        .HasForeignKey("MainEmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShiftScheduler.Models.WeeklySchedule", "WeeklySchedule")
                        .WithMany("Assignments")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ShiftScheduler.Models.Shift", "Shift")
                        .WithMany("Assignments")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BackupEmployee");

                    b.Navigation("MainEmployee");

                    b.Navigation("Shift");

                    b.Navigation("WeeklySchedule");
                });

            modelBuilder.Entity("ShiftScheduler.Models.ShiftRequiredSkill", b =>
                {
                    b.HasOne("ShiftScheduler.Models.Shift", "Shift")
                        .WithMany("RequiredSkills")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftScheduler.Models.Skill", "Skill")
                        .WithMany("ShiftRequiredSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shift");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("ShiftScheduler.Models.Employee", b =>
                {
                    b.Navigation("BackupAssignments");

                    b.Navigation("EmployeeSkills");

                    b.Navigation("MainAssignments");
                });

            modelBuilder.Entity("ShiftScheduler.Models.Shift", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("RequiredSkills");
                });

            modelBuilder.Entity("ShiftScheduler.Models.Skill", b =>
                {
                    b.Navigation("EmployeeSkills");

                    b.Navigation("ShiftRequiredSkills");
                });

            modelBuilder.Entity("ShiftScheduler.Models.WeeklySchedule", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
